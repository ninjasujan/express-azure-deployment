apiVersion: v1
kind: Namespace
metadata:
  name: $NAMESPACE
  labels:
    name: $NAMESPACE

---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE_NAME-service
  namespace: $NAMESPACE
  labels:
    app: $SERVICE_NAME-app
spec:
  type: ClusterIP
  selector:
    app: $SERVICE_NAME-app
  ports:
    - port: $SERVICE_PORT
      protocol: TCP
      targetPort: $SERVICE_PORT
      name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE_NAME-deployment
  namespace: $NAMESPACE
  labels:
    app: $SERVICE_NAME-app
spec:
  replicas: $NUM_OF_REPLICAS
  selector:
    matchLabels:
      app: $SERVICE_NAME-app
  template:
    metadata:
      labels:
        app: $SERVICE_NAME-app
    spec:
      containers:
        - name: $SERVICE_NAME
          image: $DOCKER_IMAGE_NAME:$IMAGE_TAG
          ports:
            - containerPort: $SERVICE_PORT
          resources:
            requests:
              cpu: $REQUESTED_CPU
              memory: $REQUESTED_MEMORY
            limits:
              cpu: $LIMIT_CPU
              memory: $LIMIT_MEMORY
          args:
          livenessProbe:
            httpGet:
              path: $SERVICE_HEALTHCHECK
              port: $SERVICE_PORT
            initialDelaySeconds: $PROBE_INITIAL_DELAY
            timeoutSeconds: 20
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: $SERVICE_HEALTHCHECK
              port: $SERVICE_PORT
            initialDelaySeconds: $PROBE_INITIAL_DELAY
            timeoutSeconds: 20
            periodSeconds: 10
          volumeMounts:
            - name: config
              mountPath: /home/node/app/.env
              subPath: $ENV_FILE

            - name: config-psac
              mountPath: /home/node/app/configs/azure_configs.js
              subPath: azure_configs.js

      volumes:
        - name: config
          configMap:
            name: $SERVICE_NAME-$ENVIRONMENT
        - name: config-psac
          configMap:
            name: $SERVICE_NAME-psac-$ENVIRONMENT
        - name: config-pk
          configMap:
            name: $SERVICE_NAME-pk-$ENVIRONMENT

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-ingress-$SERVICE_NAME
  namespace: $NAMESPACE
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  tls:
    - hosts:
        - $HOST_NAME
      secretName: tls-secret
  rules:
    - host: $HOST_NAME
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: $SERVICE_NAME-service
                port:
                  number: $SERVICE_PORT
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: $SERVICE_NAME-deployment
  namespace: $NAMESPACE
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: $SERVICE_NAME-deployment
  minReplicas: $HPA_MIN
  maxReplicas: $HPA_MAX
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: $CPU_PERCENT
